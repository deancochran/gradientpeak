# Test: Device-Agnostic Responsive Authentication
# Tests authentication across different device sizes and orientations
---
appId: ${APP_BUNDLE_ID}
name: Device-Agnostic Responsive Authentication
tags:
  - auth
  - responsive
  - orientation
  - device-sizes

---
# Import device-agnostic helpers
- runFlow: "../../../.maestro/helpers/device-agnostic-helpers.yaml"

# Test Suite: Portrait Orientation Authentication
---
- launchApp
- waitForAnimationToEnd

# Ensure we're in portrait mode
- setOrientation: "portrait"
- waitForAnimationToEnd

# Test authentication in portrait mode
- waitForAuthScreen
- signInFlow:
    email: "${TEST_EMAIL}"
    password: "${TEST_PASSWORD}"
- verifyAuthenticated

# Verify UI elements are properly positioned in portrait
- assertVisible:
    id: "record-activity-button"
    fallback:
      text: "Record Activity"
- assertVisible:
    id: "activities-list"
    fallback:
      text: "Your Activities"

# Test Suite: Landscape Orientation Authentication
---
# Switch to landscape mode
- setOrientation: "landscape"
- waitForAnimationToEnd

# Test that authentication persists through orientation change
- verifyAuthenticated

# Test navigation still works in landscape
- navigateToTab:
    tabName: "Profile"
- assertVisible:
    text: "${TEST_FIRST_NAME}"
    timeout: ${DEFAULT_TIMEOUT}

# Sign out and test authentication flow in landscape
- signOutFlow
- waitForAuthScreen

# Verify form is usable in landscape mode
- signInFlow:
    email: "${TEST_EMAIL}"
    password: "${TEST_PASSWORD}"
- verifyAuthenticated

# Test Suite: Device Size Variations
---
# Test on small device viewport (iPhone SE size)
- runFlow:
    when:
      platform: iOS
    commands:
      # Simulate small iPhone
      - setOrientation: "portrait"
      - waitForAnimationToEnd
      
      # Verify elements are still accessible on small screen
      - waitForAuthScreen
      - assertVisible:
          id: "email-input"
          fallback:
            text: "Email"
      - assertVisible:
          id: "password-input"
          fallback:
            text: "Password"
      - assertVisible:
          id: "sign-in-button"
          fallback:
            text: "Sign In"

# Test on tablet-sized viewport
- runFlow:
    when:
      platform: iOS
    commands:
      # iPad-like experience
      - setOrientation: "landscape"
      - waitForAnimationToEnd
      
      # Should potentially show different layout
      - signInFlow:
          email: "${TEST_EMAIL}"
          password: "${TEST_PASSWORD}"
      - verifyAuthenticated
      
      # Verify tablet-optimized layout elements
      - assertVisible:
          id: "dashboard-screen"
          timeout: ${DEFAULT_TIMEOUT}

# Test Suite: Keyboard Handling Across Orientations
---
# Test keyboard behavior in portrait
- signOutFlow
- setOrientation: "portrait"  
- waitForAuthScreen

- tapOn:
    id: "email-input"
    fallback:
      text: "Email"
- inputText: "test@example.com"

# Verify keyboard doesn't obscure important UI elements
- assertVisible:
    id: "sign-in-button"
    fallback:
      text: "Sign In"

# Test keyboard dismissal
- dismissKeyboard
- assertNotVisible:
    text: "Done"
    timeout: 3000

# Test keyboard behavior in landscape
- setOrientation: "landscape"
- waitForAnimationToEnd

- tapOn:
    id: "password-input"
    fallback:
      text: "Password"
- inputText: "password123"

# In landscape, keyboard might cover more of the screen
- dismissKeyboard

# Should still be able to submit form
- tapOn:
    id: "sign-in-button"
    fallback:
      text: "Sign In"

# Test Suite: Responsive Navigation
---
# Test navigation behavior in different orientations
- verifyAuthenticated
- setOrientation: "portrait"

# Test bottom tab navigation in portrait
- navigateToTab:
    tabName: "Profile"
- navigateToTab:
    tabName: "Dashboard"

# Test navigation in landscape
- setOrientation: "landscape"
- waitForAnimationToEnd

# Navigation should work consistently
- navigateToTab:
    tabName: "Profile"
- assertVisible:
    text: "${TEST_FIRST_NAME}"
    timeout: ${DEFAULT_TIMEOUT}

# Test Suite: Touch Target Optimization
---
# Verify touch targets are appropriately sized across orientations
- setOrientation: "portrait"
- waitForAnimationToEnd

# Test touch target sizes in portrait
- tapOn:
    id: "record-activity-button"
    fallback:
      text: "Record Activity"

# Should be easy to tap without precision issues
- assertVisible:
    text: "Record"
    timeout: ${DEFAULT_TIMEOUT}
    
# Go back and test in landscape
- pressKey: "Back"
- setOrientation: "landscape"  
- waitForAnimationToEnd

- tapOn:
    id: "record-activity-button"
    fallback:
      text: "Record Activity"
      
# Should still be easily tappable
- assertVisible:
    text: "Record"
    timeout: ${DEFAULT_TIMEOUT}

# Test Suite: Text Readability and Scaling
---
# Test text remains readable across different device configurations
- pressKey: "Back"
- navigateToTab:
    tabName: "Profile"

# Test in portrait
- setOrientation: "portrait"
- assertVisible:
    text: "${TEST_EMAIL}"
    timeout: ${DEFAULT_TIMEOUT}

# Text should be readable (not too small/large)
- assertVisible:
    text: "${TEST_FIRST_NAME}"
    timeout: ${DEFAULT_TIMEOUT}

# Test in landscape  
- setOrientation: "landscape"
- waitForAnimationToEnd

# Text should still be readable
- assertVisible:
    text: "${TEST_EMAIL}"
    timeout: ${DEFAULT_TIMEOUT}

# Test Suite: Platform-Specific Responsive Behaviors
---
# iOS-specific responsive behaviors
- runFlow:
    when:
      platform: iOS
    commands:
      - setOrientation: "portrait"
      - waitForAnimationToEnd
      
      # Test iOS safe area handling
      - assertVisible:
          id: "dashboard-screen"
          timeout: ${DEFAULT_TIMEOUT}
      
      # Test landscape safe areas
      - setOrientation: "landscape"
      - waitForAnimationToEnd
      - assertVisible:
          id: "dashboard-screen"
          timeout: ${DEFAULT_TIMEOUT}

# Android-specific responsive behaviors
- runFlow:
    when:
      platform: Android
    commands:
      - setOrientation: "portrait"
      - waitForAnimationToEnd
      
      # Test Android system bars handling
      - assertVisible:
          id: "dashboard-screen"
          timeout: ${DEFAULT_TIMEOUT}
      
      # Test different Android screen densities
      - setOrientation: "landscape"
      - waitForAnimationToEnd
      - assertVisible:
          id: "dashboard-screen"
          timeout: ${DEFAULT_TIMEOUT}

# Test Suite: Performance Across Orientations
---
# Test orientation change performance
- setOrientation: "portrait"
- stopwatch: "orientation_change"
- setOrientation: "landscape"
- waitForAnimationToEnd
- stopwatch: "orientation_change"

# Orientation changes should be smooth
- assertTrue:
    condition: ${orientation_change} < 3000
    message: "Orientation change should complete within 3 seconds"

# Test rendering performance after orientation changes
- stopwatch: "post_orientation_render"
- tapOn:
    id: "record-activity-button"
    fallback:
      text: "Record Activity"
- assertVisible:
    text: "Record"
    timeout: ${DEFAULT_TIMEOUT}
- stopwatch: "post_orientation_render"

- assertTrue:
    condition: ${post_orientation_render} < 2000
    message: "UI should render quickly after orientation changes"

# Test Suite: Final Verification
---
# Return to portrait and verify everything still works
- pressKey: "Back"
- setOrientation: "portrait"
- waitForAnimationToEnd

# Final authentication state verification
- verifyAuthenticated
- navigateToTab:
    tabName: "Dashboard"
- verifyAuthenticated

# Test that we can successfully sign out
- navigateToTab:
    tabName: "Profile"
- signOutFlow
- verifyUnauthenticated