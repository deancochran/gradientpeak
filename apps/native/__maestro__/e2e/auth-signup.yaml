# Test: Device-Agnostic User Registration Flow
# Works across iOS and Android with semantic selectors and proper error handling
---
appId: ${APP_BUNDLE_ID}
name: Device-Agnostic User Registration Flow
tags:
  - auth
  - signup
  - smoke
  - critical

---
# Import device-agnostic helpers
- runFlow: "../../../.maestro/helpers/device-agnostic-helpers.yaml"

# Launch app with proper initialization
- launchApp
- waitForAnimationToEnd

# Handle any initial app state
- assertVisible:
    text: "TurboFit"
    timeout: ${LONG_TIMEOUT}

# Handle platform-specific onboarding screens
- runFlow:
    when:
      visible:
        text: "Welcome"
    commands:
      - tapOn: "Get Started"
      - waitForAnimationToEnd

- runFlow:
    when:
      visible:
        text: "Skip"
    commands:
      - tapOn: "Skip"
      - waitForAnimationToEnd

# Navigate to Sign Up using device-agnostic approach
- tapOn:
    id: "sign-up-button"
    fallback:
      text: "Sign Up"
- waitForAnimationToEnd

# Verify we're on the sign up screen
- assertVisible:
    text: "Create Account"
    fallback:
      id: "sign-up-screen"
    timeout: ${DEFAULT_TIMEOUT}

# Use helper function for consistent form filling
- signUpFlow:
    email: "${TEST_EMAIL}"
    password: "${TEST_PASSWORD}"
    firstName: "${TEST_FIRST_NAME}"
    lastName: "${TEST_LAST_NAME}"

# Wait for processing
- waitForLoading

# Handle email verification step (device-agnostic)
- runFlow:
    when:
      visible:
        text: "Verify your email"
    commands:
      # In test mode, might have a skip option
      - runFlow:
          when:
            visible:
              text: "Skip for now"
          commands:
            - tapOn: "Skip for now"
            - waitForAnimationToEnd
      
      # Or simulate clicking verification link in test environment
      - runFlow:
          when:
            visible:
              id: "verification-code-input"
          commands:
            - tapOn:
                id: "verification-code-input"
            - inputText: "123456" # Test verification code
            - tapOn:
                id: "verify-button"
                fallback:
                  text: "Verify"

# Wait for successful registration processing
- waitForAnimationToEnd
- waitForLoading

# Verify successful registration with device-agnostic checks
- verifyAuthenticated

# Test that we can access key features
- assertVisible:
    id: "record-activity-button"
    fallback:
      text: "Record Activity"
    timeout: ${DEFAULT_TIMEOUT}

# Test navigation works
- navigateToTab:
    tabName: "Profile"

# Verify profile shows correct user data
- assertVisible:
    text: "${TEST_FIRST_NAME}"
    timeout: ${DEFAULT_TIMEOUT}

- assertVisible:
    text: "${TEST_EMAIL}"
    timeout: ${DEFAULT_TIMEOUT}

# Test accessibility compliance
- verifyAccessibility

# Navigate back to dashboard for clean state
- navigateToTab:
    tabName: "Dashboard"

# Final verification
- verifyAuthenticated